#!/usr/bin/env ruby
# encoding: utf-8

$LOAD_PATH.unshift(File.expand_path('../lib', File.dirname(__FILE__)))
require 'proxy_pool'
require 'optparse'

# proxy = ProxyPool::ProxySources::Freeproxylist.new(src: 'http://free-proxy-list.net/', max_proxy: 20)
puts 'VKL'
# proxy.fetch_proxy
# puts ProxyPool::ProxySources::Base.descendants
puts ProxyPool.const_get("ProxyPool::ProxySources::Freeproxylist").new.inspect
puts 'VKL22'

def print_help
  puts "proxy_pool, by ManhDV - version #{ProxyPool::Version::VERSION}"
  puts 'Website: https://github.com/manhdaovan/proxy_pool'
  puts
  puts 'Usage: proxy-pool <options>'
  puts
  puts 'Input options        :'
  puts '-b --balancer        : Balancer type will be used. "nginx" and "haproxy" is supported. Default is "nginx"'
  puts '-s --sources         : Sources to fetch proxy. Default is "all"'
  puts "                       Available source: #{ProxyPool::ProxySources::Base.descendants_2string}"
  puts '-n --number-proxies  : Number of proxies to be written in backend(upstream) section of configuration file.'
  puts '                       Default 50'
  puts '-p --port            : Port to connect to entry point. Default to 8080'
  puts '-h --help            : Show help message'
  puts '-v --version         : Show proxy_pool version'
end

def print_error(msg)
  puts
  puts ">>> ERROR: #{msg}"
end

def params_valid?(options)
  required_params = []
  valid           = true
  required_params.each do |rp|
    next unless options.fetch(rp, nil).nil?
    print_error("Required #{rp}")
    valid = false
  end
  valid
end

options         = { show_version: false, help: false }
meaning_options = { port: 8080, balancer: 'nginx', proxy_sources: ['all'], number_proxy: 50 }

begin
  OptionParser.new do |opts|
    opts.banner = 'Usage: proxy_pool <options>'

    opts.on('-b', '--balancer nginx', String) do |b|
      meaning_options[:balaner] = b
      unless %w(nginx haproxy).include?(b)
        raise OptionParser::InvalidArgument, 'Only nginx and haproxy is supported.'
      end
    end

    opts.on('-s', '--sources source1,source2', Array, 'Source to fetch proxy') do |sources|
      meaning_options[:sources] = sources
    end

    opts.on('-n', '--number-proxies 50', Numeric) do |np|
      meaning_options[:number_proxy] = np
    end

    opts.on('-p', '--port 8080', Numeric) do |p|
      meaning_options[:port] = p
    end

    opts.on('-h', '--help') do |_|
      options[:help] = true
    end

    opts.on('-v', '--version') do |_|
      options[:show_version] = true
    end
  end.parse!
rescue OptionParser::InvalidArgument, OptionParser::InvalidOption => e
  print_error(e.message)
  puts 'Run with -h or --help to view all options'
  exit(0)
end

# Execute command base on input
if options[:show_version]
  puts ProxyPool::Version::VERSION
elsif options[:help]
  print_help
elsif params_valid?(options)
  balancer = if meaning_options[:balancer] == 'nginx'
    ProxyPool::Balancer::Nginx.new(meaning_options)
  else
    ProxyPool::Balancer::Haproxy.new(meaning_options)
  end
  balancer.start
  puts "Balancer", balancer.inspect

else
  print_help
end
